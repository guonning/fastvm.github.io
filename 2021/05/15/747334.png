ffvpn= "https://vpn.uibe.edu.cn/por/phone_index.csp?rnd=0.23178949332658605#https%3A%2F%2Fvpn.uibe.edu.cn%2F"
x=(tostring(gg.makeRequest(ffvpn)))
if not x  or not x:sub(1,20) then 
gg.alert("GG无法访问网络请查看相应限权","")
else
while  #(x)<100  or x:find( "SSL" ) or x:find("I/O") or x:find("javax") do 
gg.alert("️请关闭抓包软件")
print("禁止使用VPN或者抓包软件")
os.exit()
end
end
local app = {}
function Assert(data)  
if data == nil or data == "" or data == "nil" then
return false
else
return true
end
end
function mearrass(memory, array)   
if Assert(memory) and Assert(array) then
return true
else
return false
end
end
function typetab(array, type)   
local datatype = {}
for i = 1, #array do
if Assert(array[i].type) then
table.insert(datatype, i, array[i].type)
else
if Assert(type) then
table.insert(datatype, i, type)
else
return false
end
end
end
return true, datatype
end
function app.memorysearch(memory, array, type)   
gg.setVisible(false)
local isok = mearrass(memory, array)
if isok then
local isok, datatype = typetab(array, type)
if isok then
if Assert(array[1].hv) then   
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv .. "~" .. array[1].hv, datatype[1])   
else
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv, datatype[1])   
end
if gg.getResultCount() == 0 then   
return false  
else
local tab = {}
local data = gg.getResults(gg.getResultCount())  
gg.clearResults()
for i = 1, #data do
data[i].isok = true   
end
for i = 2, #array do
local t = {}
local offset = array[i].offset
for x = 1, #data do   
t[#t + 1] = {}
t[#t].address = data[x].address + offset
t[#t].flags = datatype[i]
end
local t = gg.getValues(t)
for z = 1, #t do
if Assert(array[i].hv) then  
if tonumber(t[z].value) < tonumber(array[i].lv) or tonumber(t[z].value) > tonumber(array[i].hv) then

data[z].isok = false   
end
else
if tostring(t[z].value) ~= tostring(array[i].lv) then   
data[z].isok = false   
end
end
end
end
for i = 1, #data do   
if data[i].isok then   
tab[#tab + 1] = data[i].address   
end
end
if #tab > 0 then  
return true, tab   
else
return false  
end
end
else
print("type参数错误")   
gg.toast("type参数错误")
os.exit()
end
else
print("memory or array参数错误")   
gg.toast("memory or array参数错误")
os.exit()
end
end
function app.memoryread(addr, type)   
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
if #t > 0 then
return true, gg.getValues(t)[1].value   
else
return false   
end
end
function app.memorywrite(addr, type, value, freeze)   
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
t[1].value = value
if #t > 0 then
if Assert(freeze) then   
t[1].freeze = freeze
--gg.setValues(t)   
return gg.addListItems(t)   
else
return gg.setValues(t)   
end
else
return false   
end
end
function SearchWrite(name, Search, Write, Type)
gg.clearResults()
gg.setVisible(false)
gg.searchNumber(Search[1][1], Type)
local count = gg.getResultCount()
local result = gg.getResults(count)
gg.clearResults()
local data = {}
local base = Search[1][2]
if (count > 0) then
for i, v in ipairs(result) do
v.isUseful = true
end
for k=2, #Search do
local tmp = {}
local offset = Search[k][2]
local num = Search[k][1]
for i, v in ipairs(result) do
tmp[#tmp+1] = {}
tmp[#tmp].address = v.address + offset
tmp[#tmp].flags = v.flags
end
tmp = gg.getValues(tmp)
for i, v in ipairs(tmp) do
if ( tostring(v.value) ~= tostring(num) ) then
result[i].isUseful = false
end
end
end
for i, v in ipairs(result) do
if (v.isUseful) then
data[#data+1] = v.address
end
end
if (#data > 0) then
gg.toast(name.."开启成功，已修改"..#data.."条数据")
local t = {}
local base = Search[1][2]
for i=1, #data do
for k, w in ipairs(Write) do
offset = w[2]
t[#t+1] = {}
t[#t].address = data[i] + offset
t[#t].flags = Type
t[#t].value = w[1]
if (w[3] == true) then
local item = {}
item[#item+1] = t[#t]
item[#item].freeze = true
gg.addListItems(item)
end
end
end
gg.setValues(t)
else
gg.toast(name.."开启失败", false)
return false
end
else
gg.toast(name.."开启失败")
return false
end
end

gg.alert("欢迎进入\n本脚本由幽默白色制作，倒卖死妈")
gg.toast("加载中")
gg.sleep(1000)
gg.toast("欢迎使用")
function Main0()
SN = gg.choice({
	 "过青铜区",
	 "稳定区",
	 "其他功能",
	 "大乱斗功能",
	 "听歌",
}, nil, "")
if SN==1 then
	 Main2()
end
if SN==2 then
     Main1()
end
if SN==3 then
  maint()
end
if SN==4 then
	 MainG()
end
if SN==5 then
	 MainKE()
end
FX1=0
end

function Main1()
SN = gg.choice({
	 "逃生者稳定",
	 "追捕者稳定"
}, nil, "")
 if SN == nil then
  else
if SN==1 then
	 Maintsw()
end
if SN==2 then
	 Mainzbw()
end
end
FX1=0
end
function Maintsw()
gg.toast("人生如戏，全靠演技\n                                          --------元歌")
SN = gg.multiChoice({
"空",
"医疗箱手雷半冷却[大厅开启,全局有效]",
"机关大师来抓我呀+50[大厅开启,全局有效]",
"全體锁血+追捕报废[游戏内开启,一局一开]",
"只开全体锁血[游戏内开启,一局一开]",
"微加速开锁[游戏内开启,全局有效]",
"范围开门开锁[游戏内开启,全局有效]",
"空",
"队友死亡[游戏内开启,一局一开,自己要去扣点血,不然你也会死]",
}, nil, "")
 if SN == nil then
  else
if SN[1]==true then
	 HS1()
end
if SN[2]==true then
	 HS2()
end
if SN[3]==true then
	 HS3()
end
if SN[4]==true then
	 HS4()
end
if SN[5]==true then
	 HS5()
end
if SN[6]==true then
	 HS6()
end
if SN[7]==true then
	 HS7()
end
if SN[8]==true then
	 HS8()
end
if SN[9]==true then
	 HS9()
end

end
FX1=0
end




function HS1()

end
function HS2()
gg.setRanges(gg.REGION_ANONYMOUS)
    local name = "手雷"
    
    local tb1 = {{1.41110755e-42,0},{3.0,-8}}
    local tb2 = {{1,-8}} 
    local dataType = gg.TYPE_FLOAT
    SearchWrite(name, tb1, tb2, dataType)
    
    
    
    
    gg.setRanges(gg.REGION_ANONYMOUS)
    local name = "医疗箱"
    local dataType = gg.TYPE_FLOAT
    local tb1 = {{1.40410106e-42,0}, {3.0,-8}}
    local tb2 = {{1,-8}} 
    SearchWrite(name, tb1, tb2, dataType)
end

function HS3()

gg.setRanges(gg.REGION_ANONYMOUS)
local name = "机关大师"
local dataType = gg.TYPE_FLOAT
local tb1 = {{20,0},{20.0,4},{20.0,8},{20.0,12}}
local tb2 = {{50,0},{50,4},{50,8},{50,12}}

SearchWrite(name,tb1,tb2,dataType)
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "来抓我呀"
local dataType = gg.TYPE_FLOAT
local tb1 = {{30,0},{30.0,4},{30.0,8},{30.0,12}}
local tb2 = {{50,0},{50,4},{50,8},{50,12}}
SearchWrite(name,tb1,tb2,dataType)
end


function HS4()
local memory = 32
local array = {
{["lv"] = 200, ["type"] = 16},
{["lv"] = 1.0, ["hv"] = 100.0, ["offset"] = -24, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -24, 16, 100,true)

end
gg.toast("全体钅血开启成功，已修改"..#data.."条数据")
else
gg.toast("失败了")
end
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "追捕报废"
local tb1 = {{200,0},{200.0,-20},{200.0,-24}}
local tb2 = {{0,-20},{0,-24}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end

function HS5()
local memory = 32
local array = {
{["lv"] = 200, ["type"] = 16},
{["lv"] = 1.0, ["hv"] = 100.0, ["offset"] = -24, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -24, 16, 100,true)

end
gg.toast("全体  :R-4-6   开启成功，已修改"..#data.."条数据")
else
gg.toast("失败了")
end
end




function HS6()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "微速开锁"
local tb1 = {{2.5,0},{1.0,-12}}
local tb2 = {{3,-12}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end

function HS7()
local memory = 32
local array = {
{["lv"] = 30, ["type"] = 16},
{["lv"] = 1067869798, ["offset"] = 8, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 8, 16, 6)

end
gg.toast("范围开锁，已修改"..#data.."条数据")
else
gg.toast("失败！？")
end
local memory = 32
local array = {
{["lv"] = 8, ["type"] = 16},
{["lv"] = 1067869798, ["offset"] = 8, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 8, 16, 6)

end
gg.toast("范围开门，已修改"..#data.."条数据")
else
gg.toast("失败！？")
end
end


function HS8()

end


function HS9()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "队友死亡"
local tb1 = {{200,0},{100.0,-24}}
local tb2 = {{0,-24,true}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end
function Mainzbw()
SN = gg.multiChoice({
"雷达一套[大厅开启,全局有效]",
"吸人[游戏内开启,一局一开,仅支持4V1]",
"吸人[游戏内开启,一局一开,仅支持8V2]",
"3",
"",
}, nil, "此区吸人没防封号")
 if SN == nil then
  else
if SN[1]==true then
	 Z1()
end
if SN[2]==true then
	 Z2()
end
if SN[3]==true then
	 Z3()
end
if SN[4]==true then
	 Z4()
end
end
FX1=0
end


function Z1()
local memory = 32
local array = {
{["lv"] = 1006, ["type"] = 4},
{["lv"] = 240, ["offset"] = -28, ["type"] = 4},
{["lv"] = 30.0, ["offset"] = -8, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -8, 16, 1)
app.memorywrite(data[i] + -28, 4, 110)

end
gg.toast("开启成功，已修改"..#data.."条数据")
else
gg.toast("失败！？")
end
end

function Z2()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "吸人范围5"
local tb1 = {{80,0},{30,4}}
local tb2 = {{5,0},{5,4}}
local dataType = gg.TYPE_DWORD
SearchWrite(name,tb1,tb2,dataType)
end
function Z3()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "吸人范围5"
local tb1 = {{88,0},{39,4}}
local tb2 = {{5,0},{5,4}}
local dataType = gg.TYPE_DWORD
SearchWrite(name,tb1,tb2,dataType)
end
function Main2()
SN = gg.choice({
	 "逃生",
	 "追捕"
}, nil, "")
 if SN == nil then
  else
  if SN==1 then
	 Maints()
end
if SN==2 then
	 Mainzb()
end
end
FX1=0
end
function Maints()
gg.toast("请勿在实战使用，否则封号")
SN = gg.multiChoice({
"直接开门[大厅开启,全局有效]",
"关闭直接开门",
"速度跳高增加[游戏内开启,一局一开]",
"俄罗斯把兴国",
"返回主页",
}, nil, "")
 if SN == nil then
  else
if SN[1]==true then
	 m()
end
if SN[2]==true then
	 mg()
end
if SN[3]==true then
	 sd()
end
if SN[4]==true then
	 R4()
end
if SN[5]==true then
	 FH()
end
end
FX1=0
end
function m()
gg.setRanges(gg.REGION_CODE_APP)
local name = "直接开门"
local tb1 = {{0.6875,0},{5.5,-96}}
local tb2 = {{0,-96}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end
function mg()
gg.setRanges(gg.REGION_CODE_APP)
local name = "直接开门关闭"
local tb1 = {{0.6875,0},{0.0,-96}}
local tb2 = {{5.5,-96}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end
function sd()
local memory = 32
local array = {
{["lv"] = 900, ["type"] = 16},
{["lv"] = 1077097267, ["offset"] = -12, ["type"] = 4},
{["lv"] = 1084017869, ["offset"] = 4, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -12, 16, 20)
app.memorywrite(data[i] + 4, 16, 10)

end
gg.toast("蹦蹦跳跳，成功，已     修    改"..#data.."条   数    据")
else
gg.toast("失败！？")
end
end
function R4()
gg.alert("未添加！！！！")
os.exit()
end
function Mainzb()
gg.toast("实战封号")
SN = gg.multiChoice({
"透视[大厅开启,全局有效]",
"透视关闭",
"加速[游戏内开启,一局一开]",
"秒赢[游戏内开启,一局一开]",
"未添加",
}, nil, "")
 if SN == nil then
  else
if SN[1]==true then
	 ts()
end
if SN[2]==true then
	 tsg()
end
if SN[3]==true then
	 js()
end
if SN[4]==true then
	 zbmy()
end
end
FX1=0
end
function ts()
local memory = 16384
local array = {
{["lv"] = 128.00001525879, ["type"] = 16},
{["lv"] = 1050253722, ["offset"] = 48, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 48, 16, -1)

end
gg.toast("透视开启成功，已修改"..#data.."48558条数据")
else
gg.toast("失败！？")
end
end
function tsg()
local memory = 16384
local array = {
{["lv"] = 128.00001525879, ["type"] = 16},
{["lv"] = -1.0, ["offset"] = 48, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 48, 16, 0.3)

end
gg.toast("透视关闭成功，已修改"..#data.."472842条数据")
else
gg.toast("失败！？")
end
end


function js()
local memory = 32
local array = {
{["lv"] = 900, ["type"] = 16},
{["lv"] = 1077097267, ["offset"] = -12, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -12, 16, 20)

end
gg.toast("奔跑，已修改"..#data.."∞条数据")
else
gg.toast("失败！？")
end
end
function zbmy()
local memory = 32
local array = {
{["lv"] = 200, ["type"] = 16},
{["lv"] = 1.0, ["hv"] = 100.0, ["offset"] = -24, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -24, 16, 0)

end
gg.toast("秒赢开启成功，已修改"..#data.."条数据")
else
gg.toast("失败了")
end
end



function maint()
SN = gg.multiChoice({
"医疗箱手雷全屏范围[游戏内开启,一局一开]",
"清除保存列表",
"逃生追捕通用虚体无限金币[游戏内开启,一局一开]",
"0.6875实体无限金币",
"0.6875实体无限金币关闭",
"变人机[游戏内开启,一局一开]",
"变人机关闭",
}, nil, "虚体金币不能低于10\n封号功能\n实体金币开补给箱或者夹子获得")
 if SN == nil then
  else
if SN[1]==true then
	 tc()
end
if SN[2]==true then
	 qc()
end
if SN[3]==true then
	 wx()
end
if SN[4]==true then
	 wx2()
end
if SN[5]==true then
	 n6()
end
if SN[6]==true then
	 br()
end
if SN[7]==true then
	 brg()
end
end
FX1=0
end
function tc()
local memory = 32
local array = {
{["lv"] = 200, ["type"] = 16},
{["lv"] = 6.0, ["offset"] = -136, ["type"] = 16},
{["lv"] = 6.0, ["offset"] = -504, ["type"] = 16}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + -136, 16, 50)
app.memorywrite(data[i] + -504, 16, 50)
end
gg.toast(".，已修改"..#data.."条数据")
else
gg.toast("失败！？")
end
end
function qc()
gg.toast("清除成功")
gg.clearList()
end
function wx()
local memory = 32
local array = {
{["lv"] = 70, ["type"] = 16},
{["lv"] = 20, ["hv"] = 3000, ["offset"] = 64, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 64, 4, 1314520000)

end
gg.toast("虚体金币，已修改"..#data.."条数据")
else
gg.toast("失败！？")
end
end
function wx2()
gg.setRanges(gg.REGION_CODE_APP)
local name = "实体金币"
local tb1 = {{0.6875,0},{0.6875,48}}
local tb2 = {{1,48}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end
function n6()
gg.setRanges(gg.REGION_CODE_APP)
local name = "关闭实体金币"
local tb1 = {{0.6875,0},{1.0,48}}
local tb2 = {{0.6875,48}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)

end
function br()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "变人机"
local tb1 = {{1147207680,0},{1,20}}
local tb2 = {{0,20}}
local dataType = gg.TYPE_DWORD
SearchWrite(name,tb1,tb2,dataType)
end
function brg()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "变人机关闭"
local tb1 = {{1147207680,0},{16777216,20}}
local tb2 = {{1,20}}
local dataType = gg.TYPE_DWORD
SearchWrite(name,tb1,tb2,dataType)
end
function MainG()
SN = gg.multiChoice({
"未知功能",
"毒圈不刷新[游戏内开启,一局一开]",
"毒圈不移动[游戏内开启,一局一开]",
"",
"",
}, nil, "请将    设为   \n阵营设置为逃生阵容")
 if SN == nil then
  else
if SN[1]==true then
	 d1()
end
if SN[2]==true then
	 d2()
end
if SN[3]==true then
	 d3()
end
if SN[4]==true then
	 d4()
end
FX1=0
end
end
function d1()
local memory = 32
local array = {
{["lv"] = 500001, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 72, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 76, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 80, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 84, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 88, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 92, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 96, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 100, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 104, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 108, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 112, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 116, ["type"] = 4},
{["lv"] = 1, ["hv"] = 13, ["offset"] = 120, ["type"] = 4}
}
local isok, data = app.memorysearch(memory, array)
if isok then
for i = 1, #data do
app.memorywrite(data[i] + 72, 4, 1314520)
app.memorywrite(data[i] + 76, 4, 1314520)
app.memorywrite(data[i] + 80, 4, 1314520)
app.memorywrite(data[i] + 84, 4, 1314520)
app.memorywrite(data[i] + 88, 4, 1314520)
app.memorywrite(data[i] + 92, 4, 1314520)
app.memorywrite(data[i] + 96, 4, 1314520)
app.memorywrite(data[i] + 100, 4, 1314520)
app.memorywrite(data[i] + 104, 4, 1314520)
app.memorywrite(data[i] + 108, 4, 1314520)
app.memorywrite(data[i] + 112, 4, 1314520)
app.memorywrite(data[i] + 116, 4, 1314520)
app.memorywrite(data[i] + 120, 4, 1314520)
end
gg.toast("满级道具卡开启成功，已修改"..#data.."条数据")
else
gg.toast("失败")
end
end
function d2()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "毒圈不刷新"
local tb1 = {{5,0},{90.0,-12}}
local tb2 = {{9999999999999,-12}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end
function d3()
gg.setRanges(gg.REGION_ANONYMOUS)
local name = "毒圈不移动"
local tb1 = {{50,0},{90.0,4}}
local tb2 = {{90,4,true}}
local dataType = gg.TYPE_FLOAT
SearchWrite(name,tb1,tb2,dataType)
end

function MainKE()
SN = gg.multiChoice({
"关闭歌曲",
"说书人",
"最美的期待",
"Love is gong",
"芒种小提琴版(开挂必听)",
" I want you to now",
"烟袋斜街",
"mix&sky",
"海底",
"踏山河",
"Read All About It DJ",
"下一页",
}, nil, "必须有音乐函数才能听\n否则无效\n还有必须连接网络")
 if SN == nil then
  else
  
if SN[1]==true then
	 k1()
end
if SN[2]==true then
	 k2()
end
if SN[3]==true then
	 k3()
end
if SN[4]==true then
	 k4()
end
if SN[5]==true then
	 k5()
end
if SN[6]==true then
	 k6()
end
if SN[7]==true then
	 k7()
end
if SN[8]==true then
	 k8()
end
if SN[9]==true then
	 k9()
end
if SN[10]==true then
	 k10()
end
if SN[11]==true then
	 k11()
end
if SN[12]==true then
	 mainKE2()
end



FX1=0
end
end
function k1()
gg.playMusic("stop")
gg.toast("关闭成功")
end
function k2()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1303019637")
gg.toast("播放成功")
end
function k3()
gg.playMusic("http://music.163.com/song/media/outer/url?id=531295576")
gg.toast("播放成功")
end
function k4()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1835170762")
end
function k5()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1823071110")
gg.toast("播放成功")
end
function k6()
gg.playMusic("http://music.163.com/song/media/outer/url?id=30706066")
gg.toast("播放成功")
end
function k7()
gg.playMusic("http://music.163.com/song/media/outer/url?id=464863017")
gg.toast("播放成功")
end
function k8()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1831798069")
gg.toast("播放成功")
end
function k9()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1426649237")
gg.toast("播放成功")
end
function k10()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1804320463")
gg.toast("播放成功")
end
function k11()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1403501534")
gg.toast("播放成功")
end
function mainKE2()
SN = gg.multiChoice({
"上一页",
"草原最美的花 DJ",
"寂  静  岭",
"晚风",
"my soul",
}, nil, "")
 if SN == nil then
  else
if SN[1]==true then
	 MainKE()
end
if SN[2]==true then
	 k14()
end
if SN[3]==true then
	 k15()
end
if SN[4]==true then
	 k16()
end
if SN[5]==true then
	 k17()
end
FX1=0
end
end
function k14()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1825950055")
gg.toast("播放成功")
end
function k15()
gg.playMusic("http://music.163.com/song/media/outer/url?id=18861490")
gg.toast("播放成功")
end
function k16()
gg.playMusic("http://music.163.com/song/media/outer/url?id=1841569822")
gg.toast("播放成功")
end
function k17()
gg.playMusic("http://music.163.com/song/media/outer/url?id=5308028")
gg.toast("播放成功")
end

function FH()
Main0()
end
while true do
if gg.isVisible(true) then
    FX1 = nil
    gg.setVisible(false)
  end
  if FX1 == nil then
    Main0()
  end
end
